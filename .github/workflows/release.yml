name: Release
 
on: 
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.check_commit.outputs.should_release }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Check commit message
        id: check_commit
        run: |
          commit_msg=$(git log -1 --pretty=%B)
          if echo "$commit_msg" | grep -q "BUILD"; then
            echo "should_release=true" >> $GITHUB_OUTPUT
          else
            echo "should_release=false" >> $GITHUB_OUTPUT
          fi

  create-release:
    needs: check-commit
    if: needs.check-commit.outputs.should_release == 'true'
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          generate_release_notes: true

  build-release:
    needs: [check-commit, create-release]
    if: needs.check-commit.outputs.should_release == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: .exe
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ""
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: ""
          - os: macos-latest
            target: aarch64-apple-darwin
            suffix: ""

    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../fuckrun-${{ matrix.target }}.tar.gz fuckrun${{ matrix.suffix }}
          cd -
      
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: fuckrun-${{ matrix.target }}.tar.gz 